# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# Currently only builds on Linux and Windows

on:
  push:
    branches: [master, staging, trying]
  pull_request:

name: CI

jobs:
  check:
    name: Check
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    env:
      VCPKGRS_DYNAMIC: 1 # Use dynamic linking on Windows build (vcpkg)

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install libusb and libftdi (linux)
        run: |
          sudo apt update
          sudo apt install -y libusb-1.0-0-dev libftdi1-dev
        # Only install on Ubuntu
        if: (matrix.os == 'ubuntu-latest') || (matrix.os == 'ubuntu-20.04')

      - name: Install libftdi (windows)
        uses: lukka/run-vcpkg@v5
        with:
          vcpkgArguments: "libftdi1:x64-windows"
          # Version including bugfix for libusb (see https://github.com/microsoft/vcpkg/issues/12642)
          vcpkgGitCommitId: "6ed0bc982bf9bdca25439d538f7f272786a7af4d"
          vcpkgTriplet: x64-windows
        if: matrix.os == 'windows-latest'

      - name: Install libftdi (macos)
        run: brew install libftdi
        # Only install on macos
        if: matrix.os == 'macos-latest'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1.0.3
        with:
          command: check

  test:
    name: Test Suite

    # Run the test suite on both Linux and Windows,
    # to ensure the path handling code works on both.
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    env:
      VCPKGRS_DYNAMIC: 1 # Use dynamic linking on Windows build (vcpkg)

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install libusb and libftdi (linux)
        run: |
          sudo apt update
          sudo apt install -y libusb-1.0-0-dev libftdi1-dev
        # Only install on Ubuntu
        if: matrix.os == 'ubuntu-latest'

      - name: Install libftdi (windows)
        uses: lukka/run-vcpkg@v5
        with:
          vcpkgArguments: "libftdi1:x64-windows"
          # Version including bugfix for libusb (see https://github.com/microsoft/vcpkg/issues/12642)
          vcpkgGitCommitId: "6ed0bc982bf9bdca25439d538f7f272786a7af4d"
          vcpkgTriplet: x64-windows
        if: matrix.os == 'windows-latest'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: thumbv7m-none-eabi

      - name: Run cargo test
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --all-features

      - name: Build with default features
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install libusb
        run: |
          sudo apt update
          sudo apt install -y libusb-1.0-0-dev libftdi1-dev

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
